package org.iemm.sicomoro.db.dao;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CorteExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public CorteExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdCorteIsNull() {
            addCriterion("idCorte is null");
            return (Criteria) this;
        }

        public Criteria andIdCorteIsNotNull() {
            addCriterion("idCorte is not null");
            return (Criteria) this;
        }

        public Criteria andIdCorteEqualTo(Integer value) {
            addCriterion("idCorte =", value, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteNotEqualTo(Integer value) {
            addCriterion("idCorte <>", value, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteGreaterThan(Integer value) {
            addCriterion("idCorte >", value, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteGreaterThanOrEqualTo(Integer value) {
            addCriterion("idCorte >=", value, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteLessThan(Integer value) {
            addCriterion("idCorte <", value, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteLessThanOrEqualTo(Integer value) {
            addCriterion("idCorte <=", value, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteIn(List<Integer> values) {
            addCriterion("idCorte in", values, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteNotIn(List<Integer> values) {
            addCriterion("idCorte not in", values, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteBetween(Integer value1, Integer value2) {
            addCriterion("idCorte between", value1, value2, "idCorte");
            return (Criteria) this;
        }

        public Criteria andIdCorteNotBetween(Integer value1, Integer value2) {
            addCriterion("idCorte not between", value1, value2, "idCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteIsNull() {
            addCriterion("fechaCorte is null");
            return (Criteria) this;
        }

        public Criteria andFechaCorteIsNotNull() {
            addCriterion("fechaCorte is not null");
            return (Criteria) this;
        }

        public Criteria andFechaCorteEqualTo(Date value) {
            addCriterion("fechaCorte =", value, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteNotEqualTo(Date value) {
            addCriterion("fechaCorte <>", value, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteGreaterThan(Date value) {
            addCriterion("fechaCorte >", value, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteGreaterThanOrEqualTo(Date value) {
            addCriterion("fechaCorte >=", value, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteLessThan(Date value) {
            addCriterion("fechaCorte <", value, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteLessThanOrEqualTo(Date value) {
            addCriterion("fechaCorte <=", value, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteIn(List<Date> values) {
            addCriterion("fechaCorte in", values, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteNotIn(List<Date> values) {
            addCriterion("fechaCorte not in", values, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteBetween(Date value1, Date value2) {
            addCriterion("fechaCorte between", value1, value2, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andFechaCorteNotBetween(Date value1, Date value2) {
            addCriterion("fechaCorte not between", value1, value2, "fechaCorte");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorIsNull() {
            addCriterion("saldoAnterior is null");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorIsNotNull() {
            addCriterion("saldoAnterior is not null");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorEqualTo(BigDecimal value) {
            addCriterion("saldoAnterior =", value, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorNotEqualTo(BigDecimal value) {
            addCriterion("saldoAnterior <>", value, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorGreaterThan(BigDecimal value) {
            addCriterion("saldoAnterior >", value, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("saldoAnterior >=", value, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorLessThan(BigDecimal value) {
            addCriterion("saldoAnterior <", value, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorLessThanOrEqualTo(BigDecimal value) {
            addCriterion("saldoAnterior <=", value, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorIn(List<BigDecimal> values) {
            addCriterion("saldoAnterior in", values, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorNotIn(List<BigDecimal> values) {
            addCriterion("saldoAnterior not in", values, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("saldoAnterior between", value1, value2, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoAnteriorNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("saldoAnterior not between", value1, value2, "saldoAnterior");
            return (Criteria) this;
        }

        public Criteria andSaldoActualIsNull() {
            addCriterion("saldoActual is null");
            return (Criteria) this;
        }

        public Criteria andSaldoActualIsNotNull() {
            addCriterion("saldoActual is not null");
            return (Criteria) this;
        }

        public Criteria andSaldoActualEqualTo(BigDecimal value) {
            addCriterion("saldoActual =", value, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualNotEqualTo(BigDecimal value) {
            addCriterion("saldoActual <>", value, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualGreaterThan(BigDecimal value) {
            addCriterion("saldoActual >", value, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("saldoActual >=", value, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualLessThan(BigDecimal value) {
            addCriterion("saldoActual <", value, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualLessThanOrEqualTo(BigDecimal value) {
            addCriterion("saldoActual <=", value, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualIn(List<BigDecimal> values) {
            addCriterion("saldoActual in", values, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualNotIn(List<BigDecimal> values) {
            addCriterion("saldoActual not in", values, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("saldoActual between", value1, value2, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andSaldoActualNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("saldoActual not between", value1, value2, "saldoActual");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionIsNull() {
            addCriterion("usuarioCreacion is null");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionIsNotNull() {
            addCriterion("usuarioCreacion is not null");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionEqualTo(String value) {
            addCriterion("usuarioCreacion =", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionNotEqualTo(String value) {
            addCriterion("usuarioCreacion <>", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionGreaterThan(String value) {
            addCriterion("usuarioCreacion >", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionGreaterThanOrEqualTo(String value) {
            addCriterion("usuarioCreacion >=", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionLessThan(String value) {
            addCriterion("usuarioCreacion <", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionLessThanOrEqualTo(String value) {
            addCriterion("usuarioCreacion <=", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionLike(String value) {
            addCriterion("usuarioCreacion like", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionNotLike(String value) {
            addCriterion("usuarioCreacion not like", value, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionIn(List<String> values) {
            addCriterion("usuarioCreacion in", values, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionNotIn(List<String> values) {
            addCriterion("usuarioCreacion not in", values, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionBetween(String value1, String value2) {
            addCriterion("usuarioCreacion between", value1, value2, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andUsuarioCreacionNotBetween(String value1, String value2) {
            addCriterion("usuarioCreacion not between", value1, value2, "usuarioCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionIsNull() {
            addCriterion("fechaCreacion is null");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionIsNotNull() {
            addCriterion("fechaCreacion is not null");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionEqualTo(Date value) {
            addCriterion("fechaCreacion =", value, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionNotEqualTo(Date value) {
            addCriterion("fechaCreacion <>", value, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionGreaterThan(Date value) {
            addCriterion("fechaCreacion >", value, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionGreaterThanOrEqualTo(Date value) {
            addCriterion("fechaCreacion >=", value, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionLessThan(Date value) {
            addCriterion("fechaCreacion <", value, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionLessThanOrEqualTo(Date value) {
            addCriterion("fechaCreacion <=", value, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionIn(List<Date> values) {
            addCriterion("fechaCreacion in", values, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionNotIn(List<Date> values) {
            addCriterion("fechaCreacion not in", values, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionBetween(Date value1, Date value2) {
            addCriterion("fechaCreacion between", value1, value2, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andFechaCreacionNotBetween(Date value1, Date value2) {
            addCriterion("fechaCreacion not between", value1, value2, "fechaCreacion");
            return (Criteria) this;
        }

        public Criteria andDescripcionIsNull() {
            addCriterion("descripcion is null");
            return (Criteria) this;
        }

        public Criteria andDescripcionIsNotNull() {
            addCriterion("descripcion is not null");
            return (Criteria) this;
        }

        public Criteria andDescripcionEqualTo(String value) {
            addCriterion("descripcion =", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotEqualTo(String value) {
            addCriterion("descripcion <>", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionGreaterThan(String value) {
            addCriterion("descripcion >", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionGreaterThanOrEqualTo(String value) {
            addCriterion("descripcion >=", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLessThan(String value) {
            addCriterion("descripcion <", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLessThanOrEqualTo(String value) {
            addCriterion("descripcion <=", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionLike(String value) {
            addCriterion("descripcion like", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotLike(String value) {
            addCriterion("descripcion not like", value, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionIn(List<String> values) {
            addCriterion("descripcion in", values, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotIn(List<String> values) {
            addCriterion("descripcion not in", values, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionBetween(String value1, String value2) {
            addCriterion("descripcion between", value1, value2, "descripcion");
            return (Criteria) this;
        }

        public Criteria andDescripcionNotBetween(String value1, String value2) {
            addCriterion("descripcion not between", value1, value2, "descripcion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table corte
     *
     * @mbggenerated do_not_delete_during_merge Sat Aug 18 16:09:03 CDT 2012
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table corte
     *
     * @mbggenerated Sat Aug 18 16:09:03 CDT 2012
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}