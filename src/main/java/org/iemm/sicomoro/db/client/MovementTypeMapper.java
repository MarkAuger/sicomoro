package org.iemm.sicomoro.db.client;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.iemm.sicomoro.db.dao.MovementType;
import org.iemm.sicomoro.db.dao.MovementTypeExample;

public interface MovementTypeMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    int countByExample(MovementTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    int deleteByExample(MovementTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    @Delete({
        "delete from movementType",
        "where idMovementType = #{idMovementType,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer idMovementType);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    @Insert({
        "insert into movementType (name, idcMovementSign, ",
        "createDate, updateDate)",
        "values (#{name,jdbcType=VARCHAR}, #{idcMovementSign,jdbcType=INTEGER}, ",
        "#{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="idMovementType", before=false, resultType=Integer.class)
    int insert(MovementType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    int insertSelective(MovementType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    List<MovementType> selectByExample(MovementTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    @Select({
        "select",
        "idMovementType, name, idcMovementSign, createDate, updateDate",
        "from movementType",
        "where idMovementType = #{idMovementType,jdbcType=INTEGER}"
    })
    @ResultMap("BaseResultMap")
    MovementType selectByPrimaryKey(Integer idMovementType);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    int updateByExampleSelective(@Param("record") MovementType record, @Param("example") MovementTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    int updateByExample(@Param("record") MovementType record, @Param("example") MovementTypeExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    int updateByPrimaryKeySelective(MovementType record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table movementType
     *
     * @mbggenerated Sun Sep 02 15:34:08 CDT 2012
     */
    @Update({
        "update movementType",
        "set name = #{name,jdbcType=VARCHAR},",
          "idcMovementSign = #{idcMovementSign,jdbcType=INTEGER},",
          "createDate = #{createDate,jdbcType=TIMESTAMP},",
          "updateDate = #{updateDate,jdbcType=TIMESTAMP}",
        "where idMovementType = #{idMovementType,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(MovementType record);
}